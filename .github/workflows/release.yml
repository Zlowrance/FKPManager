name: Create Release

permissions:
  contents: write

on:
  push:
    branches:
      - 'main'
    paths:
      - 'FKPManager.toc'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      versionChanged: ${{ steps.version-change.outputs.changed }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Check for Version Change
        id: version-change
        run: |
          VERSION_CHANGE=$(git diff HEAD^ HEAD -- FKPManager.toc | grep '^+## Version:')
          if [ -z "$VERSION_CHANGE" ]; then
            echo "::set-output name=changed::false"
          else
            echo "::set-output name=changed::true"
          fi
  
  build:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.versionChanged == 'true'
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Extract Version from .toc
        id: extract_version
        run: |
          VERSION=$(grep '^## Version:' path/to/FKPManager.toc | cut -d ':' -f2 | xargs)
          echo "Extracted version $VERSION"
          echo "::set-output name=version::$VERSION"
          
      - name: Create and Push Tag
        run: |
          VERSION=${{ steps.extract_version.outputs.version }}
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
          
      - name: Package Addon
        id: package
        uses: BigWigsMods/packager@v2.0.3
        with:
          args: -n "{package-name}"
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.extract_version.outputs.version }}"
          release_name: Release v${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: './.release/FKPManager.zip'
          asset_name: 'FKPManager.zip'
          asset_content_type: application/zip
